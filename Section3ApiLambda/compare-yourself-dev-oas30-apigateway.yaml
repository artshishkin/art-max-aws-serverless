openapi: "3.0.1"
info:
  title: "compare-yourself"
  description: "AWS Serverless APIs &amp; Apps - A Complete Introduction - Tutorial\
    \ from Maximilian Schwarzm√ºller (Udemy)"
  version: "2021-12-26T07:40:04Z"
servers:
- url: "https://9cxvvjl4d0.execute-api.eu-north-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/dev"
paths:
  /compare-yourself:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompareData"
        required: true
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
      - simple-custom-auth: []
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:392971033516:function:cy-store-data/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "#set($userData=$input.path('$'))\n{\n    \"userId\":\
            \ \"$context.authorizer.principalId\",\n    \"age\" : \"$userData.age\"\
            ,\n    \"height\" : \"$userData.height\",\n    \"income\" : \"$userData.income\"\
            \n}"
        passthroughBehavior: "when_no_templates"
        contentHandling: "CONVERT_TO_TEXT"
    delete:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:392971033516:function:cy-delete-data/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_TEXT"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
  /compare-yourself/{type}:
    get:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompareDataArray"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:392971033516:function:cy-get-data/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n[\n\n#foreach($elem\
                \ in $inputRoot)\n {\n  \"age\" : $elem.age,\n  \"height\" : $elem.height,\n\
                \  \"income\" : $elem.income\n} \n#if($foreach.hasNext),#end\n#end\n\
                ]"
        requestTemplates:
          application/json: "{\n  \"type\" : \"$input.params('type')\"\n}"
        passthroughBehavior: "when_no_templates"
        contentHandling: "CONVERT_TO_TEXT"
    options:
      parameters:
      - name: "type"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
components:
  schemas:
    CompareData:
      title: "CompareData"
      required:
      - "age"
      - "height"
      - "income"
      type: "object"
      properties:
        age:
          type: "integer"
        height:
          type: "integer"
        income:
          type: "integer"
    Empty:
      title: "Empty Schema"
      type: "object"
    CompareDataArray:
      title: "CompareDataArray"
      type: "array"
      items:
        required:
        - "age"
        - "height"
        - "income"
        type: "object"
        properties:
          age:
            type: "integer"
          height:
            type: "integer"
          income:
            type: "integer"
  securitySchemes:
    simple-custom-auth:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        type: "token"
        authorizerUri: "arn:aws:apigateway:eu-north-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-north-1:392971033516:function:cy-custom-auth/invocations"
        authorizerResultTtlInSeconds: 0
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
