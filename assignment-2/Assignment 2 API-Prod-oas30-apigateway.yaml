openapi: "3.0.1"
info:
  title: "Assignment 2 API"
  description: "Assignment API with POST Lambda and"
  version: "1.0"
servers:
- url: "https://wa51qda2oe.execute-api.eu-north-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "/Prod"
paths:
  /store-data:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserModel"
        required: true
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        type: "aws"
        httpMethod: "POST"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StoreDataFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"user-age\"\
                \ : $inputRoot.age,\n  \"name\" : \"$inputRoot.fullname\"\n}"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n  \"age\" : $inputRoot.age,\n\
            \  \"firstname\" : \"$inputRoot.name.firstname\",\n  \"lastname\" : \"\
            $inputRoot.name.lastname\"\n}"
        passthroughBehavior: "when_no_templates"
        contentHandling: "CONVERT_TO_TEXT"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
components:
  schemas:
    UserModel:
      title: "UserModel"
      required:
      - "age"
      - "height"
      - "name"
      type: "object"
      properties:
        age:
          type: "integer"
        height:
          type: "integer"
        weight:
          type: "integer"
        name:
          required:
          - "firstname"
          - "lastname"
          type: "object"
          properties:
            firstname:
              type: "string"
            lastname:
              type: "string"
            nickname:
              type: "string"
    Empty:
      title: "Empty Schema"
      type: "object"
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
